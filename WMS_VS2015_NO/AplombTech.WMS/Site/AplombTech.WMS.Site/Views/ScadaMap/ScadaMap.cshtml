@using AplombTech.WMS.QueryModel.Reports
@using AplombTech.WMS.Domain.Sensors
@model List<AplombTech.WMS.Domain.Sensors.Sensor>

<div id="imgContainer">
    <img src="@Url.Content("~/Images/scadamap.png")" class="img" alt="Scada map">

    <style>
        span {
            cursor: pointer;
            cursor: hand;
            font-weight: normal !important;
            font-size: small !important;
        }

        .dateTimeSpan {
            font-size: smaller !important;
        }

        .grad {
            background: red; /* For browsers that do not support gradients */
            background: -webkit-linear-gradient(left, rgba(235, 238, 221, 1), rgba(255, 0, 0, 0)); /*Safari 5.1-6*/
            background: -o-linear-gradient(right, rgba(235, 238, 221, 1), rgba(255, 0, 0, 0)); /*Opera 11.1-12*/
            background: -moz-linear-gradient(right, rgba(235, 238, 221, 1), rgba(255, 0, 0, 0)); /*Fx 3.6-15*/
            background: linear-gradient(to right, rgba(235, 238, 221, 1), rgba(255, 0, 0, 0)); /*Standard*/
        }
    </style>
    <div style="position: absolute; padding-left: 10px; margin-top: -520px;">
        <span>Connection Status</span>
        @if (@Model[0].LastDataReceived.HasValue && @Model[1].LastDataReceived.Value.AddMinutes(1) > @DateTime.Now)
        {
            <h4><span id="connectionStatus" class="label label-success">Online</span></h4>
        }
        else
        {
            <h4><span id="connectionStatus" class="label label-danger">Offline</span></h4>
        }
        <span class="label label-primary dateTimeSpan" id="connectionStatusTime">@(@Model[0].LastDataReceived == null ? @DateTime.MinValue : Model[1].LastDataReceived)</span>

    </div>
    <div style="position: absolute; padding-left: 10px; margin-top: -280px;" class="grad">
        <h4>General</h4>
        @foreach (var sensor in Model)
        {
            if (@sensor is ChlorinePresenceDetector)
            {
                if (@sensor.CurrentValue <= 0)
                {
                    <p style="text-align: right"><strong>Chlorine Presence</strong> <span id="CPD_@sensor.UUID" class="label label-danger">Off</span></p>
                }
                else
                {
                    <p style="text-align: right"><strong>Chlorine Presence</strong> <span id="CPD_@sensor.UUID" class="label label-success">On</span></p>
                }
            }

            if (@sensor is BatteryVoltageDetector)
            {
                <p style="text-align: right"><strong>Battery Voltage</strong> <span id="BV_@sensor.UUID" class="label label-primary">@(((BatteryVoltageDetector)sensor).CurrentValue) @sensor.UnitName</span></p>
            }
            if (@sensor is ACPresenceDetector)
            {
                if (@sensor.CurrentValue <= 0)
                {
                    <p style="text-align: right"><strong>Main Power</strong> <span id="ACP_@sensor.UUID" class="label label-danger">Off</span></p>
                }
                else
                {
                    <p style="text-align: right"><strong>Main Power</strong> <span id="ACP_@sensor.UUID" class="label label-success">On</span></p>
                }
            }

            if (@sensor is EnergySensor)
            {
                <p style="text-align: right"><strong>Energy(Q)</strong> <span id="ETC_@sensor.UUID" class="label label-primary">@(((EnergySensor) sensor).CumulativeValue) kw-hr</span></p>
                <p style="text-align: right"><strong>Energy(C)</strong> <span id="ETQ_@sensor.UUID" class="label label-primary">@(((EnergySensor)sensor).CurrentValue) kw-hr</span></p>
            }
        }




    </div>

    <div id="motorInfo" style="padding-left: 10px; margin-left: 180px; text-align: right; position: absolute; margin-top: -280px;" class="grad">
        <h4 style="text-align: left">Pump Motor </h4>

        @for (int i = 0; i < @ViewBag.MotorDataList.Count; i++)
        {

            if (@ViewBag.MotorDataList[i] != null && i == 0)
            {
                <p style="margin-bottom: 2px;">
                    <strong>Motor Status</strong>
                    @if (@ViewBag.MotorDataList[i].MotorStatus == "ON")
                    {
                        <span id="motorswitch" class="label label-success">ON</span>
                    }
                    else
                    {
                        <span id="motorswitch" class="label label-danger">OFF</span>
                    }
                    <span id="motorswitchStatus"></span>

                </p>
            }
            if (@ViewBag.MotorDataList[i] != null && i == 0)
            {
                <p style="margin-bottom: 2px; margin-top: 15px;" id="pautoarea">
                    <strong>Mode</strong>
                    @{string autoValue = (ViewBag.MotorDataList[i].Auto) ? "Auto" : "Manual";}
                    <span id="pmotorAuto" class="label label-primary ">@autoValue</span>
                </p>
                <p style="margin-bottom: 2px; width: 150px; /* border: groove; */border-bottom: groove; padding-bottom: 5px; border-top: groove; margin-top: 10px;">
                    <strong>Last Command time</strong>


                    <span id="pmotorCommandTime" class="label label-primary dateTimeSpan">@ViewBag.MotorDataList[i].LastCommandTime</span>
                </p>



                        }

                        if (@ViewBag.MotorDataList[i] != null && i == 1)
                        {
                            <h4 style="text-align: left;">Cholorine Motor</h4>
                            if (@ViewBag.MotorDataList[i].MotorStatus == "ON")
                            {
                                <p style="margin-bottom: 2px;"><strong>Motor Status</strong> <span id="cmotorStatus" class="label label-success">@ViewBag.MotorDataList[i].MotorStatus</span></p>

                            }
                            else if (@ViewBag.MotorDataList[i].MotorStatus == "OFF")
                            {
                                <p style="margin-bottom: 2px;"><strong>Motor Status</strong> <span id="cmotorStatus" class="label label-danger">@ViewBag.MotorDataList[i].MotorStatus</span></p>

                            }
                            else
                            {
                                <p style="margin-bottom: 2px;"><strong>Motor Status</strong> <span id="cmotorStatus" class="label label-default">@ViewBag.MotorDataList[i].MotorStatus</span></p>
                            }

                            @*<p style="margin-bottom: 2px;"><strong>Last Command time</strong>
                                </p>
                                <span id="cmotorCommandTime" class="label label-primary dateTimeSpan">@ViewBag.MotorDataList[i].LastCommandTime</span>*@
                            }
                        }
    </div>

    <div style="margin-left: 190px; position: absolute; margin-top: -518px;">
        @foreach (var sensor in Model)
        {
            if (@sensor is PressureSensor)
            {
                <p><strong>PT-@sensor.UUID</strong> <span id="PT_@sensor.UUID" class="label label-primary"> @sensor.CurrentValue Bar</span></p>
            }
        }
    </div>

    <div style="margin-left: 550px; position: absolute; margin-top: -200px;">
        @foreach (var sensor in Model)
        {
            if (@sensor is LevelSensor)
            {
                <p><strong>LT-@sensor.UUID</strong> <span id="LT_@sensor.UUID" class="label label-primary"> @sensor.CurrentValue Metre</span></p>
                <p id="ltvalue" style="display: none;">@sensor.CurrentValue</p>
            }
        }
    </div>
    <div id="waterlevel" style="background-color: transparent; position: absolute; margin-top: -265px; margin-left: 404px; height: 135px; width: 56px"></div>

    <div style="margin-left: 350px; position: absolute; margin-top: -515px;">
        @foreach (var sensor in Model)
        {
            if (@sensor is FlowSensor)
            {
                <p>
                    <strong>FT-@sensor.UUID (C)</strong> <span id="FTC_@sensor.UUID" class="label label-primary"> @(((FlowSensor) sensor).CurrentValue) Litre</span>
                    <br/><br/>
                    <strong>FT-@sensor.UUID (Q)</strong> <span id="FTQ_@sensor.UUID" class="label label-primary"> @(((FlowSensor)sensor).CumulativeValue) Litre</span>
                </p>
            }
        }
    </div>
</div>
@if (Model[0].PumpStation.AreaId == 4)
{
    @*@Html.ActionLink("Camera Output", "http://192.169.244.37:8080/rtmp-publisher/player.html" , new { target = "_blank" })*@
    <div id="cameraPortion" style="border: groove; margin-left: 680px; position: absolute; margin-top: -515px;">
        <a href="http://192.169.244.37:8080/rtmp-publisher/player.html" target="_blank">Camera Output</a>
    </div>

}

<div class="modal fade" id="chartModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Live Chart</h4>
            </div>
            <div class="modal-body" style="padding: 0px !important;">
                <div>
                    <div id="chart_div">

                    </div>

                </div>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<span id="pmotorCommandSent" style="visibility:hidden"></span>

<script>
    var graphInterval;
    var unit = parseInt($('#ltvalue').text());
    var height = parseInt($('#waterlevel').css('height'));
    var margin = parseInt($('#waterlevel').css('margin-top'));
    $("#waterlevel").css("background-color", "#2fcff4");
    $("#waterlevel").css("height", height - (100 - (1.35 * unit)) + "px");
    $("#waterlevel").css("margin-top", margin + (100 - (1.35 * unit)) + "px");


    $('#motorswitch').on('click', function () {
        if ($('#pmotorAuto').text() == "Manual") {
            return;
        }
        if ($('#motorswitchStatus').text() == "Processing...") {
            return;
        }
        var state;
        if ($('#motorswitch').text() == 'ON') {
            state = "OFF";
        } else
            state = "ON";
        $('#motorswitchStatus').text('Processing...');
        $('#pmotorCommandSent').text(new Date().toLocaleString());

        $.ajax({
            type: "POST",
            url: $("#publishCommandUrl").val(),
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ state: state, pumpStationId: $('#SelectedPumpStationId').val() }),
            dataType: "json",
            success:
                function (data) {
                    if (data.IsSuccess) {
                        if (data.Data == 'Success') {

                        } else {
                        }

                    } else {

                    }
                },
            error: function (e) {
            }
        });

    });
    $('span').on('click', function () {

        var sensorId = $.trim(this.id.split("_")[1]);
        if (graphInterval != null)
            clearInterval(graphInterval);
        $.ajax({
            type: "POST",
            url: $("#getScadaSensorDataUrl").val(),
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ sensorId: sensorId }),
            dataType: "json",
            success:
                function (data) {
                    if (data.IsSuccess) {

                        showRealChartScada(data, sensorId);

                    }

                },
            error: function () { }
        });

    });

</script>
@*<script src="~/Scripts/swfobject.js"></script>
    <script type="text/javascript">
        var flashVars = {
            streamer: 'rtmp://192.169.244.37/myapp',
            file: 'test'
        };
        var params = {};
        params.allowfullscreen = "true";
        var attributes = {};
        swfobject.embedSWF($('#swfUrl').val(), "rtmp-publisher", "480", "360", "9.0.0", null, flashVars, params, attributes);
    </script>*@

